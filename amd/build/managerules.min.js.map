{"version":3,"file":"managerules.min.js","sources":["../src/managerules.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @file       UI scripts for Grade Calculation Setup Tool.\n * @copyright  Te Wānanga o Aotearoa\n * @author     Jeremy FitzPatrick\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport * as Ajax from 'core/ajax';\nimport * as ModalFactory from 'core/modal_factory';\nimport * as ModalEvents from 'core/modal_events';\nimport * as Str from 'core/str';\n\nexport const init = () => {\n    document.getElementById('rulestable').addEventListener('click', editrule);\n};\n\n/**\n * Decide which edit button was pressed\n * @param {Event} evt\n */\nconst editrule = (evt) => {\n    let el = evt.target;\n    if (el.nodeName === \"I\") {\n        el = el.parentElement;\n    } else if (el.nodeName !== \"A\") {\n        return;\n    }\n    let cls = el.getAttribute('class');\n    if (cls.includes('showhide')) {\n        // Call showhide.\n        hiderule(el);\n    } else if (cls.includes('delete')) {\n        // Show confirm.\n        deleterule(el);\n    } else {\n        return;\n    }\n    evt.preventDefault();\n};\n\n/**\n * Handle UI request to hide a rule\n * @param {HTMLElement} el\n */\nconst hiderule = (el) => {\n    let ruleid = el.dataset.ruleid || 0;\n    let action = el.dataset.action;\n\n    var reqStrings = [\n        {'key': 'hide'},\n        {'key': 'show'},\n    ];\n    var stringsPromise = Str.get_strings(reqStrings);\n    stringsPromise.done(function(strings) {\n\n        Ajax.call([{\n            methodname: 'gradereport_calcsetup_hiderule',\n            args: {\n                'id': ruleid,\n                'action': action\n            },\n            done: function(data) {\n                if (data.success === false) {\n                    return;\n                }\n                if (action == 1) {\n                    let hide = strings[0];\n                    el.innerHTML = \"<i class='icon fa fa-eye fa-fw' title='\" + hide + \"' aria-label='\" + hide + \"'></i>\";\n                    el.dataset.action = 0;\n                } else {\n                    let show = strings[1];\n                    el.innerHTML = \"<i class='icon fa fa-eye-slash fa-fw' title='\" + show + \"' aria-label='\" + show + \"'></i>\";\n                    el.dataset.action = 1;\n                }\n            }\n        }]);\n    });\n};\n\n/**\n * Handle UI request to delete a rule\n * @param {HTMLElement} el\n * @return {*}\n */\nconst deleterule = (el) => {\n    let ruleid = el.dataset.ruleid || 0;\n\n    return ModalFactory.create({\n        type: ModalFactory.types.SAVE_CANCEL,\n        body: Str.get_string('deleterulereally', 'gradereport_calcsetup'),\n        title: Str.get_string('deleterule', 'gradereport_calcsetup'),\n        removeOnClose: true,\n        buttons: {\n            save: Str.get_string('yes'),\n            cancel: Str.get_string('no'),\n        }\n    }).then(function(modal) {\n        modal.getRoot().on(ModalEvents.save, function() {\n            Ajax.call([{\n                methodname: 'gradereport_calcsetup_deleterule',\n                args: {\n                    'id': ruleid\n                },\n                done: function(data) {\n                    if (data.success === false) {\n                        return false;\n                    }\n                    let row = el.parentNode.parentNode;\n                    row.remove();\n                    return true;\n                }\n            }]);\n        });\n\n        modal.show();\n        return true;\n    });\n};\n"],"names":["document","getElementById","addEventListener","editrule","evt","el","target","nodeName","parentElement","cls","getAttribute","includes","hiderule","deleterule","preventDefault","ruleid","dataset","action","Str","get_strings","done","strings","Ajax","call","methodname","args","data","success","hide","innerHTML","show","ModalFactory","create","type","types","SAVE_CANCEL","body","get_string","title","removeOnClose","buttons","save","cancel","then","modal","getRoot","on","ModalEvents","parentNode","remove"],"mappings":";;;;;;wQA2BoB,KAChBA,SAASC,eAAe,cAAcC,iBAAiB,QAASC,iBAO9DA,SAAYC,UACVC,GAAKD,IAAIE,UACO,MAAhBD,GAAGE,SACHF,GAAKA,GAAGG,mBACL,GAAoB,MAAhBH,GAAGE,oBAGVE,IAAMJ,GAAGK,aAAa,YACtBD,IAAIE,SAAS,YAEbC,SAASP,QACN,CAAA,IAAII,IAAIE,SAAS,iBAEpBE,WAAWR,IAIfD,IAAIU,kBAOFF,SAAYP,SACVU,OAASV,GAAGW,QAAQD,QAAU,EAC9BE,OAASZ,GAAGW,QAAQC,OAMHC,IAAIC,YAJR,CACb,KAAQ,QACR,KAAQ,UAGGC,MAAK,SAASC,SAEzBC,KAAKC,KAAK,CAAC,CACPC,WAAY,iCACZC,KAAM,IACIV,cACIE,QAEdG,KAAM,SAASM,UACU,IAAjBA,KAAKC,WAGK,GAAVV,OAAa,KACTW,KAAOP,QAAQ,GACnBhB,GAAGwB,UAAY,0CAA4CD,KAAO,iBAAmBA,KAAO,SAC5FvB,GAAGW,QAAQC,OAAS,MACjB,KACCa,KAAOT,QAAQ,GACnBhB,GAAGwB,UAAY,gDAAkDC,KAAO,iBAAmBA,KAAO,SAClGzB,GAAGW,QAAQC,OAAS,WAYlCJ,WAAcR,SACZU,OAASV,GAAGW,QAAQD,QAAU,SAE3BgB,aAAaC,OAAO,CACvBC,KAAMF,aAAaG,MAAMC,YACzBC,KAAMlB,IAAImB,WAAW,mBAAoB,yBACzCC,MAAOpB,IAAImB,WAAW,aAAc,yBACpCE,eAAe,EACfC,QAAS,CACLC,KAAMvB,IAAImB,WAAW,OACrBK,OAAQxB,IAAImB,WAAW,SAE5BM,MAAK,SAASC,cACbA,MAAMC,UAAUC,GAAGC,YAAYN,MAAM,WACjCnB,KAAKC,KAAK,CAAC,CACPC,WAAY,mCACZC,KAAM,IACIV,QAEVK,KAAM,SAASM,UACU,IAAjBA,KAAKC,eACE,SAEDtB,GAAG2C,WAAWA,WACpBC,UACG,SAKnBL,MAAMd,QACC"}